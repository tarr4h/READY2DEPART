{"ast":null,"code":"var _jsxFileName = \"C:\\\\WORKSPACE\\\\TRV_WEB\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useInput } from \"../hks/useInput\";\nimport styles from \"../css/Login.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const userId = useInput(\"admin\");\n  const userPw = useInput(\"1234\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('/auth/isLogin').then(res => {\n      if (res.status === 200) {\n        navigate('/');\n      }\n    });\n  }, []);\n  function resetLoginForm() {\n    userId.reset();\n    userPw.reset();\n  }\n  async function doLogin() {\n    let result = await processLogin();\n    if (result) {\n      navigate('/', {\n        replace: true\n      });\n    } else {\n      alert('회원정보가 일치하지 않습니다.');\n      resetLoginForm();\n    }\n  }\n  function processLogin() {\n    let param = {\n      id: userId.val,\n      pwd: userPw.val\n    };\n    let loginRslt = fetch('/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(param)\n    });\n    return loginRslt.then(res => {\n      return res.status === 200;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.tit,\n        children: \"TRAVEL WEB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId.val,\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        className: styles.input,\n        onChange: userId.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: userPw.val,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        className: styles.input,\n        onChange: userPw.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: styles.btn,\n        onClick: doLogin,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"GmmqZO2z0RbkcW48pwbqbIrr4bw=\", false, function () {\n  return [useInput, useInput, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useInput","styles","useNavigate","useEffect","jsxDEV","_jsxDEV","Login","_s","userId","userPw","navigate","fetch","then","res","status","resetLoginForm","reset","doLogin","result","processLogin","replace","alert","param","id","val","pwd","loginRslt","method","headers","body","JSON","stringify","className","wrapper","children","box","tit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","input","onChange","btn","onClick","_c","$RefreshReg$"],"sources":["C:/WORKSPACE/TRV_WEB/src/main/frontend/src/pages/Login.js"],"sourcesContent":["import {useInput} from \"../hks/useInput\";\r\nimport styles from \"../css/Login.module.css\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\nfunction Login(){\r\n    const userId = useInput(\"admin\");\r\n    const userPw = useInput(\"1234\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetch('/auth/isLogin')\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                navigate('/');\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    function resetLoginForm(){\r\n        userId.reset();\r\n        userPw.reset();\r\n    }\r\n\r\n    async function doLogin(){\r\n        let result = await processLogin();\r\n        if(result){\r\n            navigate('/', {replace:true});\r\n        } else {\r\n            alert('회원정보가 일치하지 않습니다.');\r\n            resetLoginForm();\r\n        }\r\n    }\r\n\r\n    function processLogin(){\r\n        let param = {\r\n            id : userId.val,\r\n            pwd : userPw.val\r\n        };\r\n\r\n        let loginRslt = fetch('/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify(param)\r\n        });\r\n        return loginRslt.then(res => {\r\n            return res.status === 200;\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.box}>\r\n                <h1 className={styles.tit}>TRAVEL WEB</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userId.val}\r\n                    placeholder=\"아이디를 입력하세요\"\r\n                    className={styles.input}\r\n                    onChange={userId.onChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={userPw.val}\r\n                    placeholder=\"비밀번호를 입력하세요\"\r\n                    className={styles.input}\r\n                    onChange={userPw.onChange}\r\n                />\r\n                <a className={styles.btn} onClick={doLogin}>LOGIN</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}